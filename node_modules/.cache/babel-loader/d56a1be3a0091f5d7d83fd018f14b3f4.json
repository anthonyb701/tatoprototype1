{"remainingRequest":"F:\\vue.js develop\\tatoproto\\tatoprototype1\\node_modules\\babel-loader\\lib\\index.js!F:\\vue.js develop\\tatoproto\\tatoprototype1\\src\\store\\index.js","dependencies":[{"path":"F:\\vue.js develop\\tatoproto\\tatoprototype1\\src\\store\\index.js","mtime":1598553298737},{"path":"F:\\vue.js develop\\tatoproto\\tatoprototype1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594980559340},{"path":"F:\\vue.js develop\\tatoproto\\tatoprototype1\\node_modules\\babel-loader\\lib\\index.js","mtime":1594980559174}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/vue.js develop/tatoproto/tatoprototype1/src/store/index.js"],"names":["Vue","Vuex","fb","router","firebase","require","auth","fs","firestore","use","Store","state","fbAppointments","userProfile","isUser","users","currentUser","isLoading","isUpdatedAge","admin","items","ranksItems","timeTypeItems","urgencyTypeItems","operationTypeItems","anesthesiaTypeItems","spotTypeItems","ultimateTypeItems","anesthesiologistItems","medsisterItems","complication","gistoItems","getters","uid","onUserChanged","isAdmin","rankItems","sortedAppointments","sort","a","b","date","toDate","creatorAppointments","creatorId","crAppointments","find","appoint","push","featuredAppointments","currentDate","Date","featuredAppo","forEach","appo","appointment","id","user","mutations","setUserProfile","payload","catch","loadAppointments","setUpdatedAge","setCurrentUser","setUsersArray","usersFilteredArray","setLoading","actions","deleteAppointment","commit","collection","doc","delete","then","console","log","err","login","form","dispatch","signInWithEmailAndPassword","email","password","fetchUserProfile","usersCollection","get","data","signup","createUserWithEmailAndPassword","set","name","title","logout","signOut","setAppointment","appoObj","surgeon","description","dateEntry","dateLeft","op_code","complexity","rank","nozologia","gisto","timeType","urgencyType","operationType","anesthesiaType","spotType","ultimateType","assistant","anesthesiologist","medsister","dateAge","age","duration","timeStart","timeEnd","sicknessHistory","diagnosisAfter","diagnosisUltimate","gistoPicked","add","update","setCounter","idCounter","counterId","querySnapshot","size","docs","length","op_number_of_counter","error","updateDocWithCounter","onSnapshot","appoArray","post","loadUsers","usersArray","updatePost","updatedObj","firstName","lastName","uploadNewImg","dropName","filename","ext","slice","lastIndexOf","storageRef","storage","ref","uploadTask","put","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","downloadURL","Image","image","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as fb from '../../firebase'\r\nimport router from '../router/index'\r\nconst firebase = require(\"firebase\")\r\nimport { auth } from '../../firebase'\r\nrequire(\"firebase/firestore\");\r\nvar fs = firebase.firestore();\r\n\r\n\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    fbAppointments: [],\r\n    userProfile: {},\r\n    isUser: false,\r\n    users: [],\r\n    currentUser: '',\r\n    isLoading: false,\r\n    isUpdatedAge: false,\r\n    admin: 'qfJufwBf9UeGTTmOtYhnho0MPs32',\r\n    items: [\r\n      'В.Бітнер',\r\n      'М.Поліщук',\r\n      'Я.Леськів',\r\n      'С.Терешенко',\r\n      'Т.Кльофа',\r\n      'Д.Леськів',\r\n      'М.Дурач',\r\n      'Інший',\r\n      \r\n    ],\r\n    ranksItems: [\r\n      'Строкова Служба',\r\n      'Контракт',\r\n      'Офіцер',\r\n      'Пенсіонер',\r\n      'Платний',\r\n      'Договірний',\r\n      'Тематичний',\r\n      'Інший'\r\n    ],\r\n    timeTypeItems: [\r\n      'Первинна',\r\n      'Повторна'\r\n    ],\r\n    urgencyTypeItems: [\r\n      'Планова',\r\n      'Ургентна'\r\n    ],\r\n    operationTypeItems: [\r\n      'Лапараскопічна',\r\n      'Ендоскопічна',\r\n      'Малоінвазивна',\r\n      'Відкрита'\r\n    ],\r\n    anesthesiaTypeItems: [\r\n      'Місцева',\r\n      'Ендотрахеальний Наркоз',\r\n      'Епідуральна',\r\n      'Комбінована'\r\n    ],\r\n    spotTypeItems: [\r\n      'Стаціонарна',\r\n      'Амбулаторна',\r\n    ],\r\n    ultimateTypeItems: [\r\n      'Виписаний',\r\n      'Помер', \r\n    ],\r\n    anesthesiologistItems: [\r\n      'О.Зачепа',\r\n      'А.Медвідь', \r\n      'Ю.Скуратівський',\r\n      'І.Шенгофер',\r\n      'Р.Дмитришин',\r\n      \"В.Остап'юк\",\r\n      'Т.Лобойко',\r\n      'Інший'\r\n    ],\r\n    medsisterItems: [\r\n      'С.Пилипчук',\r\n      'І.Сидір', \r\n      'А.Яковлева'\r\n    ],\r\n    complication: [\r\n      'Більшої',\r\n      'Меншої'\r\n    ],\r\n    gistoItems: [\r\n      '1',\r\n      '2',\r\n      '3',\r\n      '4'\r\n    ]\r\n  },\r\n  getters: {\r\n    currentUser(state){\r\n      return firebase.auth().currentUser.uid\r\n    },\r\n    onUserChanged(state){\r\n      return state.currentUser\r\n    },\r\n    isAdmin(state){\r\n      return state.admin\r\n    },\r\n    items(state){\r\n      return state.items\r\n    },\r\n    anesthesiologistItems(state){\r\n      return state.anesthesiologistItems\r\n    },\r\n    medsisterItems(state){\r\n      return state.medsisterItems\r\n    },\r\n    rankItems(state){\r\n      return state.ranksItems\r\n    },\r\n    timeTypeItems(state){\r\n      return state.timeTypeItems\r\n    },\r\n    urgencyTypeItems(state){\r\n      return state.urgencyTypeItems\r\n    },\r\n    operationTypeItems(state){\r\n      return state.operationTypeItems\r\n    },\r\n    anesthesiaTypeItems(state){\r\n      return state.anesthesiaTypeItems\r\n    },\r\n    spotTypeItems(state){\r\n      return state.spotTypeItems\r\n    },\r\n    ultimateTypeItems(state){\r\n      return state.ultimateTypeItems\r\n    },\r\n    complication(state){\r\n      return state.complication\r\n    },\r\n    gistoItems(state){\r\n      return state.gistoItems\r\n    },\r\n    fbAppointments(state){\r\n      return state.fbAppointments\r\n    },\r\n    sortedAppointments(state){\r\n      return state.fbAppointments.sort((a,b) => {\r\n        return a.date.toDate() - b.date.toDate()\r\n      })\r\n    },\r\n    isLoading(state){\r\n      return state.isLoading\r\n    },\r\n    creatorAppointments(state,getters){\r\n      const creatorId = firebase.auth().currentUser.uid\r\n      let crAppointments = []\r\n       getters.sortedAppointments.find(appoint => {\r\n         if(appoint.creatorId == creatorId){\r\n           crAppointments.push(appoint)\r\n         }\r\n      })\r\n      if(state.isUser == false){\r\n        crAppointments = []\r\n      }\r\n      return crAppointments\r\n    },\r\n    userProfile(state){\r\n      return state.userProfile\r\n    },\r\n    featuredAppointments(state, getters){\r\n      let currentDate = new Date()\r\n      let featuredAppo = []\r\n      getters.sortedAppointments.forEach(appo => {\r\n        if(appo.date.toDate() > currentDate ) {\r\n          featuredAppo.push(appo)\r\n          \r\n        }\r\n      })\r\n      return featuredAppo\r\n    },\r\n    appointment(state){\r\n      return id => {\r\n        return state.fbAppointments.find(appoint => {\r\n          return appoint.id === id\r\n        })\r\n      }\r\n    },\r\n    user(state){\r\n      return state.isUser\r\n    },\r\n    \r\n\r\n  },\r\n  mutations: {\r\n    setUserProfile(state, payload) {\r\n      state.userProfile = payload\r\n      state.isUser = true\r\n      router.push('/').catch(()=>{});\r\n    },\r\n    loadAppointments(state, payload){\r\n      state.fbAppointments = payload\r\n    },\r\n    setUpdatedAge(state, payload){\r\n      state.isUpdatedAge = payload\r\n    },\r\n    setCurrentUser(state, payload){\r\n      state.currentUser = payload\r\n    },\r\n    setUsersArray(state, payload){\r\n      let usersFilteredArray = []\r\n      payload.forEach(user => {\r\n        if(user.id !== state.currentUser && user.id !== '2OzZisF4d7OzBHUZsNyu5Xbipuw2'){\r\n          usersFilteredArray.push(user)\r\n        }\r\n      })\r\n      state.users = usersFilteredArray\r\n    },\r\n    setLoading(state, payload){\r\n      state.isLoading = payload\r\n    }\r\n  },\r\n  actions: {\r\n      async deleteAppointment({commit}, payload){\r\n        commit('setLoading', true)\r\n        fs.collection('posts').doc(payload.id).delete()\r\n        .then(() => {\r\n          console.log('Deleted')\r\n          // fs.collection('counter').doc(payload.counterId).delete()\r\n          console.log('all deleted')\r\n          commit('setLoading', false)\r\n          router.push('/')\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          commit('setLoading', false)\r\n        })\r\n      },\r\n      async login({ dispatch, commit }, form) {\r\n        // commit('setLoading', true)\r\n        // sign user in\r\n        const { user } = await fb.auth.signInWithEmailAndPassword(form.email, form.password).then(()=>{\r\n          commit('setLoading', true)\r\n        })\r\n    \r\n        // fetch user profile and set in state\r\n        dispatch('fetchUserProfile', user)\r\n        commit('setLoading', false)\r\n      },\r\n      async fetchUserProfile({ commit }, user) {\r\n        // fetch user profile\r\n        const userProfile = await fb.usersCollection.doc(user.uid).get()\r\n\r\n        // set user profile in state\r\n        commit('setUserProfile', userProfile.data())\r\n        commit('setLoading', false)\r\n        \r\n        // change route to dashboard\r\n      },\r\n      async signup({ dispatch, commit }, form) {\r\n        commit('setLoading', true)\r\n        // sign user up\r\n        const { user } = await fb.auth.createUserWithEmailAndPassword(form.email, form.password)\r\n      \r\n        // create user profile object in userCollections\r\n        await fb.usersCollection.doc(user.uid).set({\r\n          name: form.name,\r\n          title: form.title,\r\n          email: form.email,\r\n          password: form.password,\r\n          id: user.uid\r\n        })\r\n        // fetch user profile and set in state\r\n        dispatch('fetchUserProfile', user)\r\n        commit('setLoading', false)\r\n      },\r\n      async logout({ commit }) {\r\n        commit('setLoading', true)\r\n        await fb.auth.signOut()\r\n      \r\n        // clear userProfile and redirect to /login\r\n        \r\n        commit('setUserProfile', {})\r\n        this.state.isUser = false\r\n        router.push('/auth').catch(()=>{});\r\n        commit('setLoading', false)\r\n      },\r\n      async setAppointment({commit, dispatch}, payload){\r\n        commit('setLoading', true)\r\n          let appoObj = {\r\n            surgeon: payload.surgeon,\r\n            description: payload.description,\r\n            creatorId: fb.auth.currentUser.uid,\r\n            title: payload.title,\r\n            user: payload.user,\r\n            date: payload.date,\r\n            dateEntry: payload.dateEntry,\r\n            dateLeft: payload.dateLeft,\r\n            op_code: payload.op_code,\r\n            complexity: payload.complexity,\r\n            rank: payload.rank,\r\n            nozologia: payload.nozologia,\r\n            gisto: payload.gisto,\r\n            timeType: payload.timeType,\r\n            urgencyType: payload.urgencyType,\r\n            operationType: payload.operationType,\r\n            anesthesiaType: payload.anesthesiaType,\r\n            spotType: payload.spotType,\r\n            ultimateType: payload.ultimateType,\r\n            assistant:  payload.assistant,\r\n            anesthesiologist: payload.anesthesiologist,\r\n            medsister: payload.medsister,\r\n            dateAge: payload.dateAge,\r\n            age: payload.age,\r\n            duration: payload.duration,\r\n            timeStart: payload.timeStart,\r\n            timeEnd: payload.timeEnd,\r\n            sicknessHistory: payload.sicknessHistory,\r\n            diagnosisAfter: payload.diagnosisAfter,\r\n            diagnosisUltimate: payload.diagnosisUltimate,\r\n            complication: payload.complication,\r\n            gistoPicked: payload.gistoPicked\r\n            }\r\n          await fs.collection('posts').add(appoObj)\r\n          .then(data => {\r\n            const id = data.id\r\n            fs.collection('posts').doc(id).update({\r\n              id: id\r\n            })\r\n            dispatch('setCounter', id)\r\n          })\r\n          // await fs.collection('counter').add(id)\r\n          // .then(data => {\r\n          //   const idCounter = data.id\r\n          //   // fs.collection('counter').doc(idCounter).update({\r\n          //   //   id: id\r\n          //   // })\r\n          // })\r\n          // fs.collection('counter').onSnapshot(querySnapshot => {\r\n          //   const op_number_of_counter = querySnapshot.length\r\n          // }, error => {\r\n          //   console.log(error)\r\n          //   commit('setLoading', false)\r\n          // })\r\n          // await fs.collection('posts').doc(id).update({\r\n          //   counterId: idCounter,\r\n          //   op_number_of_counter: op_number_of_counter\r\n          // })\r\n          commit('setLoading', false)\r\n          // router.go(0);\r\n      },\r\n      async setCounter({dispatch}, payload){\r\n        console.log(payload)\r\n         fs.collection('counter').add({\r\n           id: payload\r\n         })\r\n          .then(data => {\r\n            const idCounter = data.id\r\n            fs.collection('counter').doc(idCounter).update({\r\n              idCounter: idCounter\r\n            })\r\n             fs.collection('posts').doc(payload).update({\r\n              counterId: idCounter,\r\n            })\r\n            fs.collection('counter').get()\r\n            .then(querySnapshot => {\r\n              console.log(querySnapshot.size)\r\n              console.log(querySnapshot.docs.length)\r\n              const op_number_of_counter = querySnapshot.size\r\n              dispatch('updateDocWithCounter', {\r\n                op_number_of_counter: op_number_of_counter,\r\n                id: payload\r\n              })\r\n            }, error => {\r\n              console.log(error)\r\n              commit('setLoading', false)\r\n            })\r\n          })\r\n          \r\n      },\r\n      async updateDocWithCounter({commit},payload){\r\n        console.log(payload)  \r\n        await fs.collection('posts').doc(payload.id).update({\r\n            op_number_of_counter: payload.op_number_of_counter\r\n          })\r\n      },\r\n      loadAppointments({commit}){\r\n        commit('setLoading', true)\r\n        fs.collection('posts').onSnapshot(querySnapshot => {\r\n          let appoArray = []\r\n          querySnapshot.forEach(post => {\r\n            appoArray.push(post.data())\r\n          })\r\n          commit('loadAppointments', appoArray)\r\n          \r\n        }, error => {\r\n          console.log(error)\r\n          commit('setLoading', false)\r\n        })\r\n        commit('setLoading', false)\r\n      },\r\n      async loadUsers({commit}){\r\n       fs.collection('users').onSnapshot(querySnapshot => {\r\n          let usersArray = []\r\n          querySnapshot.forEach(user => {\r\n              usersArray.push(user.data())\r\n            })\r\n            commit('setUsersArray', usersArray) \r\n        }, error => {\r\n          console.log(error)\r\n        })\r\n      },\r\n      updatePost ({commit}, payload){\r\n        // if(payload.notToLoading !== 'yes'){\r\n        //   commit('setLoading', true)\r\n        // }\r\n        commit('setLoading', true)\r\n        let updatedObj = {}\r\n        if(payload.title){\r\n          updatedObj.title = payload.title\r\n        }\r\n        if(payload.surgeon){\r\n          updatedObj.surgeon = payload.surgeon\r\n        }\r\n        if(payload.description){\r\n          updatedObj.description = payload.description\r\n        }\r\n        if(payload.op_number_of_counter){\r\n          updatedObj.op_number_of_counter = payload.op_number_of_counter\r\n        }\r\n        if(payload.rank){\r\n          updatedObj.rank = payload.rank\r\n        }\r\n        if(payload.firstName){\r\n          updatedObj = {\r\n            \"user.firstName\": payload.firstName,\r\n            ...updatedObj\r\n          }\r\n        }\r\n        if(payload.lastName){\r\n          updatedObj = {\r\n            \"user.lastName\": payload.lastName,\r\n            ...updatedObj\r\n          }\r\n        }\r\n        if(payload.date) {\r\n          updatedObj.date = payload.date\r\n        }\r\n        if(payload.dateEntry) {\r\n          updatedObj.dateEntry = payload.dateEntry\r\n        }\r\n        if(payload.dateLeft) {\r\n          updatedObj.dateLeft = payload.dateLeft\r\n        }\r\n        if(payload.op_code) {\r\n          updatedObj.op_code = payload.op_code\r\n        }\r\n        if(payload.complexity) {\r\n          updatedObj.complexity = payload.complexity\r\n        }\r\n        if(payload.nozologia) {\r\n          updatedObj.nozologia = payload.nozologia\r\n        }\r\n        if(payload.gisto) {\r\n          updatedObj.gisto = payload.gisto\r\n        }\r\n        if(payload.timeType) {\r\n          updatedObj.timeType = payload.timeType\r\n        }\r\n        if(payload.urgencyType) {\r\n          updatedObj.urgencyType = payload.urgencyType\r\n        }\r\n        if(payload.operationType) {\r\n          updatedObj.operationType = payload.operationType\r\n        }\r\n        if(payload.anesthesiaType) {\r\n          updatedObj.anesthesiaType = payload.anesthesiaType\r\n        }\r\n        if(payload.spotType) {\r\n          updatedObj.spotType = payload.spotType\r\n        }\r\n        if(payload.ultimateType) {\r\n          updatedObj.ultimateType = payload.ultimateType\r\n        }\r\n        if(payload.assistant) {\r\n          updatedObj.assistant = payload.assistant\r\n        }\r\n        if(payload.anesthesiologist) {\r\n          updatedObj.anesthesiologist = payload.anesthesiologist\r\n        }\r\n        if(payload.medsister) {\r\n          updatedObj.medsister = payload.medsister\r\n        }\r\n        if(payload.dateAge) {\r\n          updatedObj.dateAge = payload.dateAge\r\n        }\r\n        if(payload.age) {\r\n          updatedObj.age = payload.age\r\n        }\r\n        if(payload.duration) {\r\n          updatedObj.duration = payload.duration\r\n        }\r\n        if(payload.timeStart) {\r\n          updatedObj.timeStart = payload.timeStart\r\n        }\r\n        if(payload.timeEnd) {\r\n          updatedObj.timeEnd = payload.timeEnd\r\n        }\r\n        if(payload.sicknessHistory) {\r\n          updatedObj.sicknessHistory = payload.sicknessHistory\r\n        }\r\n        if(payload.diagnosisAfter) {\r\n          updatedObj.diagnosisAfter = payload.diagnosisAfter\r\n        }\r\n        if(payload.diagnosisUltimate) {\r\n          updatedObj.diagnosisUltimate = payload.diagnosisUltimate\r\n        }\r\n        if(payload.complication) {\r\n          updatedObj.complication = payload.complication\r\n        }\r\n        if(payload.gistoPicked) {\r\n          updatedObj.gistoPicked = payload.gistoPicked\r\n        }\r\n        // fi\r\n        // firebase.database().ref('meetups').child(payload.id).update(updatedObj)\r\n        // console.log(updatedObj)\r\n        fs.collection('posts').doc(payload.id).update({\r\n          // \"user.firstName\": payload.firstName,\r\n          // \"user.lastName\": payload.lastName,\r\n          ...updatedObj\r\n        })\r\n        .then(() => {\r\n          commit('setLoading', false)\r\n          // commit('updateMeetup', payload)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          commit('setLoading', false)\r\n        })\r\n      },\r\n      uploadNewImg({commit, getters, state}, payload) {\r\n        commit('setLoading', true)\r\n        var dropName = ''\r\n        //Check If Service Exists\r\n        firebase.firestore().collection('users').doc(state.currentUser)\r\n        .get()\r\n        .then(()=> {\r\n            // let imageUrl\r\n            // const filename = payload.Image.name\r\n            const filename = payload.name\r\n            const ext = filename.slice(filename.lastIndexOf('.'))\r\n            dropName = state.currentUser +'.'+ext\r\n            var storageRef = firebase.storage().ref('images/'+ state.currentUser +'.'+ext)\r\n            var uploadTask = firebase.storage().ref('images/'+ state.currentUser +'.'+ext).put(payload)\r\n            .then(function(snapshot) {\r\n              var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n              console.log('Upload is ' + progress + '% done');\r\n  \r\n          }).then(() => {\r\n            storageRef.getDownloadURL().then(function(downloadURL) {\r\n              console.log('File available at', downloadURL);\r\n              firebase.firestore().collection('users').doc(state.currentUser).update({Image: downloadURL,filename: dropName})\r\n              .then( ()=>{\r\n                // state.userProfile.push({\r\n                //   Image: downloadURL,\r\n                //   filename: dropName,\r\n                // })\r\n                state.userProfile.image = downloadURL\r\n                state.userProfile.filename = dropName\r\n\r\n                commit('setLoading', false)\r\n                router.push('/').catch(()=>{})\r\n\r\n              } )\r\n            })\r\n          })\r\n            \r\n        })\r\n      }\r\n      \r\n  },\r\n  modules: {\r\n  }\r\n})"]}]}